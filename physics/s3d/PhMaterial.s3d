#ifndef __USE_MATERIAL
#define __USE_MATERIAL

class CVmPhMaterial{

	var handler;	//! Value to refer the material inside the library
	
	GetRestitution();
	GetStaticFriction();
	GetDynamicFriction();
	SetRestitution(r);
	SetStaticFriction(sf);
	SetDynamicFriction(df);
};


/*!
 * Creates a new physic material
 * \param restitution the coefficient of restitution
 * \param staticFriction the coefficient of static friction
 * \param dynamicFriction the coefficient of dynamic friction
 * \return material handler
 */
function CVmPhMaterial::CVmPhMaterial(restitution, staticFriction, dynamicFriction){
	handler = PhysXVR.NewMaterial(staticFriction, dynamicFriction, restitution);
	CheckForErrorMessage(handler, "NewMaterial");
}	

/*!
 * Retrieves the bounciness of the material
 * \return material elasticity
 */
function CVmPhMaterial::GetRestitution(){
	var temp = 0.0;
	CheckForErrorMessage(PhysXVR.GetRestitution(handler, &temp), "GetRestitution");
	return temp;
} 

/*!
 * Retrieves the static friction of the material
 * \return material static friction
 */	
function CVmPhMaterial::GetStaticFriction(){
	var temp = 0.0;
	CheckForErrorMessage(PhysXVR.GetStaticFriction(handler, &temp), "GetStaticFriction");
	return temp;
} 

/*!
 * Retrieves the dynamic friction of the material
 * \return material dynamic friction
 */
function CVmPhMaterial::GetDynamicFriction(){
	var temp = 0.0;
	CheckForErrorMessage(PhysXVR.GetDynamicFriction(handler, &temp), "GetDynamicFriction");
	return temp;
} 

/*!
 * Sets the bounciness of the material
 * \param	r	material bounciness
 */
function CVmPhMaterial::SetRestitution(r){
	CheckForErrorMessage(PhysXVR.SetRestitution(handler, r), "SetRestitution");
}

/*!
 * Sets the static friction of the material
 * \param	sf	material static friction
 */
function CVmPhMaterial::SetStaticFriction(sf){
	CheckForErrorMessage(PhysXVR.SetStaticFriction(handler, sf), "SetStaticFriction");
}

/*!
 * Sets the dynamic friction of the material
 * \param	r	material dynamic friction
 */
function CVmPhMaterial::SetDynamicFriction(df){
	CheckForErrorMessage(PhysXVR.setDynamicFriction(handler, df), "SetStaticFriction");
}

#endif
