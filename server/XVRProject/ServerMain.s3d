/* Include s3d symbols */
#include <Script3d.h>
#include <Camera.s3d.h>

#define PHYSX

/* Include shared libraries */
#include "../../libXVRshared/Server.s3d"

/* Initialization synchonization */
var end_init = 0;


/* Set global scene parameters */
SET SCENE_FOV  = 60;
SET SCENE_NEAR = 0.005;
SET SCENE_FAR  = 1000;


/* COMMUNICATION VARIABLES */
var server_t;


/* Camera globals */
var CamPos = [14.5822 , 9.4691 , 47.8944]; 	// camera position

/* Light globals */
var Light0;
var PosL = [15, 10, 15];	// default light position


/* Function declarations */
function CameraMoveMouse();
function DrawGrid(col, size);


function OnDownload()
{
	// TODO: download your resources here
	// E.g.: FileDownload("resource.ext");
}



function OnInit(params)
{
	/* initialize camera */
	CameraGetCurrent().SetPosition(CamPos);
	
	/* initialize light */
	Light0 = CVmLight();
	Light0.SetPosition(PosL);
	Light0.SetDiffuse(1, 1, 1);
	Light0.Enable();
	
	SetLocalDir("");

	server_t = Server();
	server_t.conf("127.0.0.1", 5000, 5001, "127.0.0.1",
		8000, "127.0.0.1", 8001
	);
	server_t.init();
	
	end_init = 1;
}

function OnFrame()
{	
	CameraMoveMouse();
	SceneBegin();	
	DrawGrid([0.5, 0.5, 0.5], 100);	

	SceneEnd();
	
}


function DownloadReady(RequestID)
{
	// TODO
}



function OnTimer()
{
	/* Wait the end of the OnInit() */
	if (end_init == 1) {
		server_t.step();
	}
}



function OnExit()
{

}



// Camera manager (using mouse)
function CameraMoveMouse()
{	

	CameraMoveMouse_MBL_LC();

}


function DrawGrid(col, size)
{
	/* let's not mess up current OpenGL status */
	glPushAttrib(GL_LIGHTING_BIT | GL_LINE_BIT | GL_CURRENT_BIT);
	
	glLineWidth(1);
	glDisable(GL_LIGHTING);
	glColor(col);
	var max = size / 2.0;
	var min = -max;	
	var step = size / 10.0;
	
	glBegin(GL_LINES);
		for (var i = min; i <= max; i += step)
		{
			glVertex(i, 0, max);
			glVertex(i, 0, min);
			
			glVertex(max, 0, i);
			glVertex(min, 0, i);
		}
	glEnd();
	
	/* polite restoration of previous OpenGL status */
	glPopAttrib();
}

//////// Utility fnctions


function OnEvent()
{
	
}

function OnError()
{
	
}