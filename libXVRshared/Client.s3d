 /*
  *  This library implements all the classes and functions for the Client side
  * 
  */
 
 class Client {
 	
 	var server_address;
	var udp_server_port;
	
 	var udp_client_port;
 	var id_channel;
 	
 	conf(s_address, s_port, c_port);
 	init();
 	step();
 	send(data);
 	recv();
 	
 };
 
 /* This function is used to configure address and ports. */
 
 function Client::conf(s_address, s_port, c_port)
 {	
 	server_address = s_address;
 	udp_server_port = s_port;
 	udp_client_port = c_port;		
 }
 
 /* This function is used from the Client to do all the init operations */
 
 function Client::init()
 {	
 	id_channel = NetCreateChannel(udp_client_port, 
 									server_address, VR_NO_BLOCKING);
 	if (id_channel == -1)
 		outputln("Error creating channel");				
 }
 

 function Client::send(data)
 {
	NetVarSendTo(server_address, udp_server_port, data);
 }

 function Client::recv()
 {
 	var pkt = NetVarReceiveFrom(id_channel, server_address);
 	if (pkt != NULL)
 		outputln(pkt);
 }
 
 function Client::step()
 {
	// Get data from leap motion
	send(3);
	recv();
	// 
 }